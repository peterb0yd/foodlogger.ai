// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                       String                    @id @default(uuid())
    email                    String                    @unique
    name                     String?
    createdAt                DateTime                  @default(now())
    updatedAt                DateTime                  @updatedAt
    stripeCustomerId         String?
    stripeSubscriptionId     String?
    stripeSubscriptionStatus StripeSubscriptionStatus?
    dailyLogs                DailyLog[]
    FoodLog                  FoodLog[]
}

model FoodItem {
    id          String        @id @default(uuid())
    name        String
    foodLogs    FoodLog[]
    foodItemLog FoodItemLog[]
}

model FoodItemLog {
    id                String            @id @default(uuid())
    foodItem          FoodItem          @relation(fields: [foodItemId], references: [id])
    foodItemId        String
    foodLog           FoodLog           @relation(fields: [foodLogId], references: [id])
    foodLogId         String
    preparationMethod PreparationMethod
    quantityCups      Int
    quantityTbsp      Int
    quantityTsp       Int
    quantityGrams     Int
}

model FoodLog {
    id          String        @id @default(uuid())
    user        User          @relation(fields: [userId], references: [id])
    userId      String
    foodItems   FoodItem[]
    image       String?
    date        DateTime
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    foodItemLog FoodItemLog[]
}

model DailyLog {
    id             String   @id @default(uuid())
    user           User     @relation(fields: [userId], references: [id])
    userId         String
    date           DateTime
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    sleepQuality   Int
    poopQuality    Int
    moodQuality    Int
    anxietyQuality Int
}

enum StripeSubscriptionStatus {
    ACTIVE 
    CANCELED
    INCOMPLETE
    INCOMPLETE_EXPIRED
    PAST_DUE
    TRIALING
    UNPAID
}

enum PreparationMethod {
    STEAMED 
    BOILED
    FRIED
    AIR_FRIED
    BAKED
    RAW
    GRILLED
    SAUTEED
    ROASTED
    POACHED
    BROILED
    MICROWAVED
    MARINATED
    PICKLED
    SMOKED
    BRAISED
    STEWED
    PRESSURE_COOKED
    SLOW_COOKED
    FERMENTED
    CANNED
    DEHYDRATED
    FREEZE_DRIED
    DRIED
    CURED
    SALTED
    SUGARED
    CANDIED
    JAMMED
}
